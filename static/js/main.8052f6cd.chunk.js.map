{"version":3,"sources":["components/Prisoner.js","components/Prisoners.js","App.js","index.js"],"names":["Prisoner","props","onClick","name","console","log","state","rehabilitated","this","prisoner","number","className","Component","flickityOptions","initialIndex","freeScroll","wrapAround","pageDots","Prisoners","adjectives","Names","noun","dummyPrisoners","index","first","Math","floor","random","length","last","key","push","prisoners","elementType","options","disableImagesLoaded","reloadOnUpdate","static","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+vNAEqBA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVC,QAAU,SAACC,GACPC,QAAQC,IAAIF,IAJZ,EAAKG,MAAQ,CAAEC,eAAe,GAHf,E,0CAUnB,WAEI,MAAyBC,KAAKP,MAAMQ,SAA5BN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,OAGd,OAEI,qBAAKC,UAAU,cAAf,SACI,sBAAKA,UAAU,2BAA2BT,QAAS,kBAAME,QAAQC,IAAIF,IAArE,UAEI,oBAAIQ,UAAU,uBAAd,SAAsCD,IAQtC,6BAAKP,a,GA9BaS,aCOhCC,EAAkB,CACpBC,aAAc,EACdC,YAAY,EACZC,YAAY,EACZC,UAAU,GAGOC,E,kDAEjB,WAAYjB,GAAQ,IAAD,sBACf,cAAMA,GAQN,IANA,IAAMkB,EAAaC,EAAMD,WACnBE,EAAOD,EAAMC,KAIbC,EAAiB,GACdC,EAAQ,EAAGA,EAFI,EAEuBA,IAAS,CAGpD,IAAMC,EAAQL,EAAWM,KAAKC,MAAMD,KAAKE,SAAWR,EAAWS,SAGzDC,EAAOR,EAAKI,KAAKC,MAAMD,KAAKE,SAAWN,EAAKO,SAG5ClB,EAASe,KAAKC,MAAsB,IAAhBD,KAAKE,UAMzBlB,EAAW,CACbqB,IAJQR,EAAeM,OAAS,EAKhCzB,KAAMqB,EAAQ,IAAMK,EACpBnB,OAAQA,GAEZY,EAAeS,KAAKtB,GA7BT,OAiCf,EAAKH,MAAQ,CACT0B,UAAWV,GAlCA,E,0CAsCnB,WACI,OACI,cAAC,IAAD,CACIX,UAAW,WACXsB,YAAa,MACbC,QAASrB,EACTsB,qBAAqB,EACrBC,gBAAc,EACdC,QAAM,EANV,SAQK7B,KAAKF,MAAM0B,UAAUM,KAAI,SAAA7B,GAAQ,OAC9B,cAAC,EAAD,CAAUA,SAAUA,GAAeA,EAASqB,c,GAnDzBlB,aCJxB2B,MATf,WACE,OACE,sBAAK5B,UAAU,YAAf,UACE,wCACA,cAAC,EAAD,QCFN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8052f6cd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Prisoner extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { rehabilitated: false };\r\n    }\r\n\r\n    onClick = (name) => {\r\n        console.log(name)\r\n    }\r\n\r\n    render() {\r\n        // desconstruct from props\r\n        const { name, number } = this.props.prisoner\r\n\r\n        // Render Prisoner\r\n        return (\r\n\r\n            <div className=\"prison-door\">\r\n                <div className=\"prison-door-inner-border\" onClick={() => console.log(name)}>\r\n                    {/* Number */}\r\n                    <h4 className=\"prisoner-number glow\">{number}</h4>\r\n                    {/* <div className=\"prison-grate\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div> */}\r\n                    {/* Name */}\r\n                    <h2>{name}</h2>\r\n                    {/* Rehabilitation Status */}\r\n                    {/* <label>Rehabilitated:</label>\r\n                            {this.state.rehabilitated ? (<label>True</label>) : (<label>False</label>)} */}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Names from \"../Names.json\"\r\n\r\nimport Flickity from 'react-flickity-component'\r\nimport \"./flickity.css\"\r\n\r\nimport Prisoner from \"./Prisoner\"\r\n\r\nconst flickityOptions = {\r\n    initialIndex: 3,\r\n    freeScroll: false,\r\n    wrapAround: true,\r\n    pageDots: false\r\n}\r\n\r\nexport default class Prisoners extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const adjectives = Names.adjectives;\r\n        const noun = Names.noun;\r\n\r\n        // Generate dummy prisoners\r\n        let numberOfPrisoners = 8;\r\n        const dummyPrisoners = [];\r\n        for (let index = 0; index < numberOfPrisoners; index++) {\r\n\r\n            // Prisoner first name from adjective\r\n            const first = adjectives[Math.floor(Math.random() * adjectives.length)]\r\n\r\n            // Prisoner last name from sustantive\r\n            const last = noun[Math.floor(Math.random() * noun.length)]\r\n\r\n            // Randomly generated prisoner number\r\n            const number = Math.floor(Math.random() * 100000)\r\n\r\n            // Prisoner key\r\n            const key = dummyPrisoners.length + 1\r\n\r\n            // Prisoner\r\n            const prisoner = {\r\n                key: key,\r\n                name: first + \" \" + last,\r\n                number: number,\r\n            }\r\n            dummyPrisoners.push(prisoner)\r\n        }\r\n\r\n        // Set state\r\n        this.state = {\r\n            prisoners: dummyPrisoners\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Flickity\r\n                className={'carousel'} // default ''\r\n                elementType={'div'} // default 'div'\r\n                options={flickityOptions} // takes flickity options {}\r\n                disableImagesLoaded={false} // default false\r\n                reloadOnUpdate // default false\r\n                static // default false\r\n            >\r\n                {this.state.prisoners.map(prisoner => (\r\n                    <Prisoner prisoner={prisoner} key={prisoner.key}></Prisoner>\r\n                ))}\r\n            </Flickity>\r\n\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport Prisoners from './components/Prisoners';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Prison</h1>\n      <Prisoners></Prisoners>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}